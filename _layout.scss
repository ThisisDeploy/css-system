$directions: (top, right, bottom, left);
$sizes: ('-negative'(-$gap), '-text'.3em, '-small'1em, ''$gap, '-big'3em, '-bigger'6em);
$columns: 12;

@each $direction in $directions {
  @each $size in $sizes {
    .margin-#{$direction}#{unquote(nth($size, 1))} {
      margin-#{$direction}: #{nth($size, 2)}
    }

    .padding-#{$direction}#{unquote(nth($size, 1))} {
      padding-#{$direction}: #{nth($size, 2)}
    }
  }
}

.center-width {
  max-width: $lg;
  margin-left: auto;
  margin-right: auto;

  &--small {
    max-width: $lg / 2;
  }

  &--medium {
    max-width: $lg * 2 / 3;
  }
}

.full-width {
  width: 100%;
}

.container {
  padding: $gap 2 * $gap;

  @media (max-width: $md) {
    padding: $gap / 2 $gap;
  }
}

.small-container {
  padding: 1em;
}

.grid {
  display: grid;
  grid-template-columns: repeat(#{$columns}, 1fr);
  gap: $gap;

  @media (max-width: $md) {
    gap: $gap / 2;
  }
}

.col {
  grid-column: span 12;
}

@each $breakpoint in $breakpoints {

  @media (min-width: nth($breakpoint, 2)) {

    @for $i from 1 to $columns+1 {
      .col--#{nth($breakpoint, 1)}-#{$i} {
        display: block;
        grid-column: span #{$i};
      }
    }

    .col--#{nth($breakpoint, 1)}-0 {
      display: none;
    }
  }
}

.flex {
  display: flex;

  &--apart {
    justify-content: space-between;
  }

  &--right {
    justify-content: flex-end;
  }
}

.toolstrip {
  display: flex;

  &--no-margin {
    margin: -1em;
  }

  &>* {
    margin: 1em;
  }
}

.block {
  display: block;
}
